% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/countryname.R
\name{countryname}
\alias{countryname}
\title{Harmonize Country Names}
\usage{
countryname(sourcevar, origin = "regex", destination = "iso3c")
}
\arguments{
\item{sourcevar}{Vector which contains the codes or country names to be
converted (character or factor)}

\item{origin}{A string which identifies the coding scheme of origin (e.g.,
\code{"short_name_zh_cn"}). See \code{chinautils::country_dict} for a list of available codes. If not specified, the country name in Chinese (simplified or traditional) will be matched via regular expressions. Otherwise the match needs to be an exact match (i.e., not just a partial one).}

\item{destination}{A string which identify the coding
scheme of destination (e.g., \code{"short_name_en"}). See \code{chinautils::country_dict} for a list of available codes.
If not specified, ISO3 codes will be used.}
}
\value{
A character vector
}
\description{
Harmonize Country Names
}
\examples{
# match both simplified and traditional Chinese
countryname(c("德国", "德國"))

# regex ignore languages other than Chinese and ambiguous cases
countryname(c("ドイツ国", "刚果"))

# get warned about potential pitfalls, such as multiple matches
countryname(c("塞尔维亚和黑山", "捷克斯洛伐克", "德国德国"))

# non-regex matching requires an exact match
countryname(c("德国", "德国人"), origin = "short_name_zh_cn", destination = "short_name_en")
}
